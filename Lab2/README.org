#+title: Лабораторная работа номер 2. Основы работы с массивами, функциями и объектами.

* Запуск кода
Для запуска я предлагаю использовать скрипт *run.sh*, который
автоматически, при помощи пакетного менеджера GNU Guix, создаёт
необходимую для запуска среду, и запускает скрипт.

* Работа, работа... блин...
В заданной работе требовалось создать функции для анализа массива
транзакций. Целью работы являлось изучение массивов и функций их
обработки в языке JavaScript, а также практическое их применения для
получения определенных навыков.

Документация по созданному коду доступна [[./docs.md][здесь, тут, вот по этой
ссылочке]] Она была автоматически сгенерированна исходя из
комментариев формата JSDoc. Клас!

* Тестирование кода!
Для тестирования я предлагаю запустить следующий код, поскольку мне
очень лень делать скриншоты всего и вся.
#+BEGIN_SRC js
  console.log("Уникальные типы транзакций: ", getUniqueTransactionTypes(transactions)); 
  console.log("Общая сумма всех транзакций: ", calculateTotalAmount(transactions)); 
  console.log("Общая сумма транзакций за 2019 год 18 число любого месяца: ", calculateTotalAmountByDate(transactions, 2019, undefined, 19)); 
  console.log("Кредитовые транзакции: ", getTransactionByType(transactions, 'credit')); 
  console.log("Транзакции с 2019-04-16 по 2019-04-18: ", getTransactionsInDateRange(transactions, '2019-04-16', '2019-04-18')); 
  console.log("Транзакции в магазине Cafe456: ", getTransactionsByMerchant(transactions, 'Cafe456')); 
  console.log("Средняя сумма транзакций: ", calculateAverageTransactionAmount(transactions)); 
  console.log("Транзакции в диапазоне суммы (90 до 100): ", getTransactionsByAmountRange(transactions, 90, 100)); 
  console.log("Общая сумма дебетовых транзакций: ", calculateTotalDebitAmount(transactions)); 
  console.log("Месяц с наибольшим количеством транзакций: ", findMostTransactionsMonth(transactions)); 
  console.log("Месяц с наибольшим количеством дебетовых транзакций: ", findMostDebitTransactionMonth(transactions)); 
  console.log("Превалирующий тип транзакций: ", mostTransactionTypes(transactions)); 
  console.log("Транзакции до 2019-01-10: ", getTransactionsBeforeDate(transactions, '2019-01-10')); 
  console.log("Транзакция с ID 103: ", findTransactionById(transactions, 103)); 
  console.log("Описания транзакций: ", mapTransactionDescriptions(transactions));
#+END_SRC

* Отвечаю на контрольные вопросы!

1. 
   + Какие методы массивов можно использовать для обработки объектов в
     JavaScript?
   + Разнообразные, такие как =map=, =filter=, =reduce=.
2. 
   + Как сравнивать даты в строковом формате в JavaScript?
   + Не представляю, я нагуглил про =Date= и пользовался им. Это
     крайне удобно
3. 
   + В чем разница между map(), filter() и reduce() при работе с
     массивами объектов?
   + =map= проходит по массиву, и для каждого его элемента выполняет
     определенную функцию, записывая результат в новый
     массив. =filter=, исходя из названия, фильтрует массив, принимая
     функцию, которая возвращает булево значение, и исходя из
     результата, принимает решение о добавлении объекта в
     результирующий массив. =reduce= проходит по массиву, выполняя
     определенную функцию, и аккумулируя возвращенные ей
     значения. Так, например, можно сложить все числа в массиве, и
     сделать это очень просто и изящно.

     
